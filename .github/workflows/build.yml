name: Build Application

on:
  workflow_call:
    inputs:
      uses-php:
        required: true
        type: boolean
        default: false
      uses-composer:
        required: true
        type: boolean
        default: false
      uses-node:
        required: true
        type: boolean
        default: false

      php-version:
        required: false
        type: string
        default: 8.3
      composer-version:
        required: false
        type: string
        default: v2

      node-version:
        required: false
        type: string
        default: 20
      node-package-manager:
        required: false
        type: string
        default: npm
      npm-build-command:
        required: false
        type: string
        default: build

      environment:
        required: false
        type: string

    secrets:
      sentry-dsn:
        required: false

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP and Deployer
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ inputs.php-version }}
          coverage: none
          tools: composer:${{ inputs.composer-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        if: ${{ inputs.uses-php }}

      - name: Setup NodeJS and NPM
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
        if: ${{ inputs.uses-node }}

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('package-lock.lock') }}
        if: ${{ inputs.uses-node }}

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
        if: ${{ inputs.uses-composer }}

      - name: Install composer dependencies
        run: composer install --verbose --prefer-dist --no-progress --no-interaction --no-dev --optimize-autoloader
        if: ${{ inputs.uses-composer }}

      - name: Install node modules
        run: ${{ inputs.node-package-manager }} ci
        if: ${{ inputs.uses-node && inputs.node-package-manager != 'yarn' }}

      - name: Install node modules with Yarn
        run: ${{ inputs.node-package-manager }}
        if: ${{ inputs.uses-node && inputs.node-package-manager == 'yarn' }}

      - name: Set Sentry DSN in environment
        run: echo "VITE_SENTRY_DSN_PUBLIC=${{ secrets.sentry-dsn }}" >> $GITHUB_ENV

      - name: Generate assets
        run: ${{ inputs.node-package-manager }} run ${{ inputs.npm-build-command }}
        if: ${{ inputs.uses-node }}

      - name: Compress the artifact
        run: zip --symlinks -q -r build.zip . -x "./node_modules/*" "./tests/*" "./.github/*"

      - name: Archive the artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-build
          path: build.zip
          overwrite: true
          retention-days: 1
